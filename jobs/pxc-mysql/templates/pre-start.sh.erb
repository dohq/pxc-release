#!/usr/bin/env bash

set -e
set -o pipefail

## NOTE: This script MUST ALWAYS run as root user.

CONFIG_DIR=/etc/mysql
datadir=/var/vcap/store/mysql
HEALTHCHECK_LOG_DIR="/var/vcap/sys/log/galera-healthcheck"
JOB_INDEX=<%= index %>
LOG_DIR=/var/vcap/sys/log/mysql
LOG_FILE=$LOG_DIR/pre-start.stdout.log
PERSISTENT_TMP_DIR=/var/vcap/data/tmp
PXC_JOB_DIR=/var/vcap/jobs/mysql
RUN_DIR=/var/vcap/sys/run/pxc_ctl
MYSQL_RUN_DIR=/var/vcap/sys/run/mysql
SECURE_FILE_PRIV=/var/vcap/data/mysql/files
SERVER_AUDIT_LOG_DIR=/var/vcap/store/mysql_audit_logs
SLOW_QUERY_LOG_FILE=$LOG_DIR/mysql_slow_query.log
TMP_DIR=/var/vcap/data/mysql/tmp

source /var/vcap/packages/cf-mysql-common/pid_utils.sh

if [[ ! -d "$RUN_DIR" ]]; then
  mkdir -p $RUN_DIR
fi
chown -R vcap:vcap $RUN_DIR

if [[ ! -d "$MYSQL_RUN_DIR" ]]; then
  mkdir -p $MYSQL_RUN_DIR
fi
chown -R vcap:vcap $MYSQL_RUN_DIR

log "pre-start setup script: set up ENV and logging"


<% if_p('server_audit_events') do |_| %>
mkdir -p ${SERVER_AUDIT_LOG_DIR}
chown vcap:vcap ${SERVER_AUDIT_LOG_DIR}

# logrotate audit logs
ln -sf /var/vcap/jobs/mysql/config/mysql_audit_logs.logrotate /etc/logrotate.d/mysql_audit_logs
<% end %>


if [[ ! -d "$TMP_DIR" ]]; then
  log "pre-start setup script: directory $TMP_DIR does not exist, creating it now"
  mkdir -p $TMP_DIR
fi
chown -R vcap:vcap $TMP_DIR
chown -R vcap:vcap $PERSISTENT_TMP_DIR

mkdir -p $SECURE_FILE_PRIV
chmod 0750 $SECURE_FILE_PRIV
chown -R vcap:vcap $SECURE_FILE_PRIV

mkdir -p $LOG_DIR
touch $LOG_FILE
touch $SLOW_QUERY_LOG_FILE
chown -R vcap:vcap $LOG_DIR
date >> $LOG_FILE 2>> $LOG_FILE
date >> $SLOW_QUERY_LOG_FILE 2>> $SLOW_QUERY_LOG_FILE
mkdir -p "${HEALTHCHECK_LOG_DIR}"
chown -R vcap:vcap "${HEALTHCHECK_LOG_DIR}"


# It is surprisingly hard to get the config file location passed in
# on the command line to the mysql.server script. This is easier.
mkdir -p $CONFIG_DIR
chown vcap:vcap $CONFIG_DIR
rm -f $CONFIG_DIR/my.cnf
ln -sf $PXC_JOB_DIR/config/my.cnf $CONFIG_DIR/my.cnf
# /var/vcap/packages/generate-auto-tune-mysql/bin/generate-auto-tune-mysql \ #FIXME
#    -f /var/vcap/jobs/mysql/config/auto-tune.cnf \
#    -P <%= p('innodb_buffer_pool_size_percent') %>

rm -f /etc/profile.d/disable_mysql_cli_history.sh
<% unless p('cli_history') %>
ln -sf $PXC_JOB_DIR/config/disable_mysql_cli_history.sh /etc/profile.d/disable_mysql_cli_history.sh
<% end %>

ulimit -n <%= p('max_open_files') %>


function check_mysql_filesystem() {
  if [[ $(mountpoint -d "${datadir}") == $(mountpoint -d /) ]]
  then
    echo "###################################################################################################################################" >> "${LOG_FILE}"
    echo "!!! Data directory (${datadir}) is on the same filesystem as /. Have you attached persistent disk? !!!" >> "${LOG_FILE}"
    echo "####################################################################################################################################" >> "${LOG_FILE}"
    exit 1
  fi
}

function check_mysql_disk_capacity() {
  local datadir_capacity=$(df -BMB --output=target,size "${datadir}" | awk ' NR==2 { print $2 } ')
  local minimum_required_space=10000
  if [[ "${datadir_capacity}" < "${minimum_required_space}" ]]
  then
    echo "########################################################################################" >> "${LOG_FILE}"
    echo "!!! Datadir capacity is ${datadir_capacity}, which is under the minimum required: ${minimum_required_space} !!!" >> "${LOG_FILE}"
    echo "########################################################################################" >> "${LOG_FILE}"
    exit 1
  fi
}

if ! test -d ${datadir}; then
  log "pre-start setup script: making ${datadir} and running /var/vcap/packages/pxc/bin/mysqld"
  mkdir -p ${datadir}
  check_mysql_filesystem
  check_mysql_disk_capacity
  /var/vcap/packages/pxc/bin/mysqld \
         --basedir=/var/vcap/packages/pxc \
         --user=vcap \
         --initialize \
         --datadir=${datadir} >> $LOG_FILE 2>> $LOG_FILE
 #FIXME: do we need --defaults-file
fi
chown -R vcap:vcap ${datadir}

rm -f /etc/my.cnf

# This currently uses "su vcap" instead of "su - vcap" because it needs to share the DISABLE_SST
# environment variable all the way down to wsrep_sst_xtrabackup-v2 for SSTs
GALERA_INIT_PREFIX_CMD="su vcap -c -o pipefail" ${PXC_JOB_DIR}/bin/pre-start-execution
